Loader & Route-Progress Integration Prompt
========================================

Project context
---------------
• Repo: **monygroupnext** – Next.js 14 (app router, TypeScript, Tailwind).  
• Styling assets:  
  – Blur utility `.bg-tartan-blur` (plaid JPEG, opacity 0.2, blur 40 px).  
  – Accent colour `#B71E34`.  
• Fonts: RedHatText (sans), RemiliaMincho (serif accent).
• Home page includes lazy-loaded Three.js hero; bundle may take ~40 kB.
Goal: Provide a silky first-paint experience and smooth route changes.

Feature requirements
--------------------
1. **Global initial loader**  
   • Implement `app/loading.tsx` (server component) to show instantly on first load.  
   • Full-screen `div` with `.bg-tartan-blur` overlay + centered loading bar.  
   • Bar animates from 0→100 % over ~1 s via keyframes; pure CSS only.  
   • Text beneath bar: “Warming up…” in RemiliaMincho.
2. **Route-change progress bar**  
   • Install `nprogress` (`npm i nprogress`).  
   • Create `src/components/RouteProgress.tsx` – client component.  
     – Subscribe to `router.events` (`usePathname` + `useEffect` pattern).  
     – Start `NProgress.start()` on `routeChangeStart`; `NProgress.done()` on `complete` & `error`.  
     – Configure to render a top 3 px stripe.  
   • Import its minimal CSS (or override via Tailwind) with accent colour `#B71E34`.
3. **Integration**  
   • Add `<RouteProgress />` inside `app/layout.tsx` just after `<body>` opens.  
   • Ensure CSS imports are global (inside component or `globals.css`).
4. **Accessibility**  
   • `prefers-reduced-motion`: disable bar animation speed-up (set instant width fill).
5. **Performance guardrails**  
   • `loading.tsx` uses only HTML/CSS; no JS executed before hydration.  
   • `nprogress` adds <4 kB gzip to JS bundle.
6. **Testing & QA**  
   • `npm run dev` → verify loader appears, then fades when home mounts.  
   • Navigate to `/audits` & back; top bar shows & hides correctly.  
   • Lighthouse mobile Performance ≥ 95.

Deliverables
------------
• New files: `app/loading.tsx`, `src/components/RouteProgress.tsx`, any CSS additions.  
• Updated `package.json` with `nprogress`.  
• GIF or screenshot demo in PR description.

Commit message example
----------------------
```
feat(ui): add global splash loader and route progress bar
```
